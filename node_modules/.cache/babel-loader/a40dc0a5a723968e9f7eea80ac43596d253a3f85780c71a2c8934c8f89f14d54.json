{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-sm-4\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"card-title\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.Allusers, Alluser => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: Alluser.id,\n      class: \"card\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h5\", _hoisted_5, _toDisplayString(Alluser.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(Alluser), 1 /* TEXT */), _createElementVNode(\"a\", {\n      href: \"#\",\n      onClick: $event => $options.Checkcomments(Alluser.id),\n      class: \"btn btn-success\"\n    }, \"comments\", 8 /* PROPS */, _hoisted_7)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","_ctx","Allusers","Alluser","key","id","_hoisted_4","_hoisted_5","_toDisplayString","title","_hoisted_6","href","onClick","$event","$options","Checkcomments","_hoisted_7"],"sources":["C:\\Users\\YASH SUTHAR\\Desktop\\Int-Vue\\vue-integration\\src\\components\\Getusers.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-4\">\r\n        <div v-for=\"Alluser in Allusers\" :key=\"Alluser.id\" class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{ Alluser.title }}</h5>\r\n            <p class=\"card-text\">{{ Alluser }}</p>\r\n            <a\r\n              href=\"#\"\r\n              @click=\"Checkcomments(Alluser.id)\"\r\n              class=\"btn btn-success\"\r\n              >comments</a\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"Getusers-item\",\r\n  data() {\r\n    return {\r\n      Alluser: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    Checkcomments(e) {\r\n      console.log(e);\r\n      this.$router.push({\r\n        name: \"CommentsList\",\r\n        params: { id: this.$route.params.i },\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    let id = this.$route.params.id;\r\n    axios\r\n      .get(`http://jsonplaceholder.typicode.com/posts/${id}`)\r\n      .then((response) => console.log(\"response\", response));\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAU;;EAEZA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAW;;;uBAN9BC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,mBAAA,CAeM,OAfNC,UAeM,GAdJD,mBAAA,CAaM,OAbNE,UAaM,I,kBAZJJ,mBAAA,CAWMK,SAAA,QAAAC,WAAA,CAXiBC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnBT,mBAAA,CAWM;MAX4BU,GAAG,EAAED,OAAO,CAACE,EAAE;MAAEZ,KAAK,EAAC;QACvDG,mBAAA,CASM,OATNU,UASM,GARJV,mBAAA,CAA+C,MAA/CW,UAA+C,EAAAC,gBAAA,CAArBL,OAAO,CAACM,KAAK,kBACvCb,mBAAA,CAAsC,KAAtCc,UAAsC,EAAAF,gBAAA,CAAdL,OAAO,kBAC/BP,mBAAA,CAKC;MAJCe,IAAI,EAAC,GAAG;MACPC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACZ,OAAO,CAACE,EAAE;MAChCZ,KAAK,EAAC;OACL,UAAQ,iBAAAuB,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}